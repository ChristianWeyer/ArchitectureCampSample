//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Services.SessionServiceReference
{


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Speaker", Namespace="http://schemas.datacontract.org/2004/07/EndToEnd.DataLayer.Models")]
    [System.SerializableAttribute()]
    public partial class Speaker : Services.SessionServiceReference.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PhotoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bio {
            get {
                return this.BioField;
            }
            set {
                if ((object.ReferenceEquals(this.BioField, value) != true)) {
                    this.BioField = value;
                    this.RaisePropertyChanged("Bio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMail {
            get {
                return this.EMailField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailField, value) != true)) {
                    this.EMailField = value;
                    this.RaisePropertyChanged("EMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityBase", Namespace="http://schemas.datacontract.org/2004/07/EndToEnd.DataLayer.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.SessionServiceReference.SessionBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.SessionServiceReference.Track))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.SessionServiceReference.Workshop))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.SessionServiceReference.Session))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.SessionServiceReference.KeyNote))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.SessionServiceReference.Rating))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.SessionServiceReference.Slot))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.SessionServiceReference.Speaker))]
    public partial class EntityBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SessionBase", Namespace="http://schemas.datacontract.org/2004/07/EndToEnd.DataLayer.Models")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.SessionServiceReference.Workshop))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.SessionServiceReference.Session))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Services.SessionServiceReference.KeyNote))]
    public partial class SessionBase : Services.SessionServiceReference.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbstractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.SessionServiceReference.Schedule ScheduleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.SessionServiceReference.Speaker Speaker1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Speaker1IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.SessionServiceReference.Speaker Speaker2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Speaker2IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Track> TracksField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abstract {
            get {
                return this.AbstractField;
            }
            set {
                if ((object.ReferenceEquals(this.AbstractField, value) != true)) {
                    this.AbstractField = value;
                    this.RaisePropertyChanged("Abstract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.SessionServiceReference.Schedule Schedule {
            get {
                return this.ScheduleField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleField, value) != true)) {
                    this.ScheduleField = value;
                    this.RaisePropertyChanged("Schedule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.SessionServiceReference.Speaker Speaker1 {
            get {
                return this.Speaker1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Speaker1Field, value) != true)) {
                    this.Speaker1Field = value;
                    this.RaisePropertyChanged("Speaker1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speaker1Id {
            get {
                return this.Speaker1IdField;
            }
            set {
                if ((this.Speaker1IdField.Equals(value) != true)) {
                    this.Speaker1IdField = value;
                    this.RaisePropertyChanged("Speaker1Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.SessionServiceReference.Speaker Speaker2 {
            get {
                return this.Speaker2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Speaker2Field, value) != true)) {
                    this.Speaker2Field = value;
                    this.RaisePropertyChanged("Speaker2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speaker2Id {
            get {
                return this.Speaker2IdField;
            }
            set {
                if ((this.Speaker2IdField.Equals(value) != true)) {
                    this.Speaker2IdField = value;
                    this.RaisePropertyChanged("Speaker2Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Track> Tracks {
            get {
                return this.TracksField;
            }
            set {
                if ((object.ReferenceEquals(this.TracksField, value) != true)) {
                    this.TracksField = value;
                    this.RaisePropertyChanged("Tracks");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Track", Namespace="http://schemas.datacontract.org/2004/07/EndToEnd.DataLayer.Models")]
    [System.SerializableAttribute()]
    public partial class Track : Services.SessionServiceReference.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Workshop", Namespace="http://schemas.datacontract.org/2004/07/EndToEnd.DataLayer.Models")]
    [System.SerializableAttribute()]
    public partial class Workshop : Services.SessionServiceReference.SessionBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Session", Namespace="http://schemas.datacontract.org/2004/07/EndToEnd.DataLayer.Models")]
    [System.SerializableAttribute()]
    public partial class Session : Services.SessionServiceReference.SessionBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyNote", Namespace="http://schemas.datacontract.org/2004/07/EndToEnd.DataLayer.Models")]
    [System.SerializableAttribute()]
    public partial class KeyNote : Services.SessionServiceReference.SessionBase {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rating", Namespace="http://schemas.datacontract.org/2004/07/EndToEnd.DataLayer.Models")]
    [System.SerializableAttribute()]
    public partial class Rating : Services.SessionServiceReference.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpeakerIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Rate {
            get {
                return this.RateField;
            }
            set {
                if ((this.RateField.Equals(value) != true)) {
                    this.RateField = value;
                    this.RaisePropertyChanged("Rate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpeakerId {
            get {
                return this.SpeakerIdField;
            }
            set {
                if ((this.SpeakerIdField.Equals(value) != true)) {
                    this.SpeakerIdField = value;
                    this.RaisePropertyChanged("SpeakerId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Slot", Namespace="http://schemas.datacontract.org/2004/07/EndToEnd.DataLayer.Models")]
    //[System.SerializableAttribute()]
    public partial class Slot : Services.SessionServiceReference.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBreakField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBreak {
            get {
                return this.IsBreakField;
            }
            set {
                if ((this.IsBreakField.Equals(value) != true)) {
                    this.IsBreakField = value;
                    this.RaisePropertyChanged("IsBreak");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start {
            get {
                return this.StartField;
            }
            set {
                if ((this.StartField.Equals(value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Schedule", Namespace="http://schemas.datacontract.org/2004/07/EndToEnd.DataLayer.Models")]
    [System.SerializableAttribute()]
    public partial class Schedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((this.SessionIdField.Equals(value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SessionDto", Namespace="http://schemas.datacontract.org/2004/07/BusinessLayer.Models")]
    [System.SerializableAttribute()]
    public partial class SessionDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AbstractField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<int> RatingIdsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionBaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.SessionServiceReference.Speaker Speaker1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Speaker1IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Services.SessionServiceReference.Speaker Speaker2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Speaker2IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.ObjectModel.ObservableCollection<int> TrackIdsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Abstract {
            get {
                return this.AbstractField;
            }
            set {
                if ((object.ReferenceEquals(this.AbstractField, value) != true)) {
                    this.AbstractField = value;
                    this.RaisePropertyChanged("Abstract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<int> RatingIds {
            get {
                return this.RatingIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingIdsField, value) != true)) {
                    this.RatingIdsField = value;
                    this.RaisePropertyChanged("RatingIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionBaseId {
            get {
                return this.SessionBaseIdField;
            }
            set {
                if ((this.SessionBaseIdField.Equals(value) != true)) {
                    this.SessionBaseIdField = value;
                    this.RaisePropertyChanged("SessionBaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionType {
            get {
                return this.SessionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionTypeField, value) != true)) {
                    this.SessionTypeField = value;
                    this.RaisePropertyChanged("SessionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.SessionServiceReference.Speaker Speaker1 {
            get {
                return this.Speaker1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Speaker1Field, value) != true)) {
                    this.Speaker1Field = value;
                    this.RaisePropertyChanged("Speaker1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speaker1Id {
            get {
                return this.Speaker1IdField;
            }
            set {
                if ((this.Speaker1IdField.Equals(value) != true)) {
                    this.Speaker1IdField = value;
                    this.RaisePropertyChanged("Speaker1Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Services.SessionServiceReference.Speaker Speaker2 {
            get {
                return this.Speaker2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Speaker2Field, value) != true)) {
                    this.Speaker2Field = value;
                    this.RaisePropertyChanged("Speaker2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Speaker2Id {
            get {
                return this.Speaker2IdField;
            }
            set {
                if ((this.Speaker2IdField.Equals(value) != true)) {
                    this.Speaker2IdField = value;
                    this.RaisePropertyChanged("Speaker2Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<int> TrackIds {
            get {
                return this.TrackIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.TrackIdsField, value) != true)) {
                    this.TrackIdsField = value;
                    this.RaisePropertyChanged("TrackIds");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultMessage", Namespace="http://schemas.datacontract.org/2004/07/ServiceLayer")]
    [System.SerializableAttribute()]
    public partial class FaultMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnerExceptionMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnerExceptionMessage {
            get {
                return this.InnerExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionMessageField, value) != true)) {
                    this.InnerExceptionMessageField = value;
                    this.RaisePropertyChanged("InnerExceptionMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SessionServiceReference.ISessionService")]
    public partial interface ISessionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetSpeakerList", ReplyAction="http://tempuri.org/ISessionService/GetSpeakerListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Speaker> GetSpeakerList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetSpeakerList", ReplyAction="http://tempuri.org/ISessionService/GetSpeakerListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Speaker>> GetSpeakerListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetSpeakerById", ReplyAction="http://tempuri.org/ISessionService/GetSpeakerByIdResponse")]
        Services.SessionServiceReference.Speaker GetSpeakerById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetSpeakerById", ReplyAction="http://tempuri.org/ISessionService/GetSpeakerByIdResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.Speaker> GetSpeakerByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/SearchSpeakerByName", ReplyAction="http://tempuri.org/ISessionService/SearchSpeakerByNameResponse")]
        Services.SessionServiceReference.Speaker SearchSpeakerByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/SearchSpeakerByName", ReplyAction="http://tempuri.org/ISessionService/SearchSpeakerByNameResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.Speaker> SearchSpeakerByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AddSpeaker", ReplyAction="http://tempuri.org/ISessionService/AddSpeakerResponse")]
        Services.SessionServiceReference.Speaker AddSpeaker(Services.SessionServiceReference.Speaker speaker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AddSpeaker", ReplyAction="http://tempuri.org/ISessionService/AddSpeakerResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.Speaker> AddSpeakerAsync(Services.SessionServiceReference.Speaker speaker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/UpdateSpeaker", ReplyAction="http://tempuri.org/ISessionService/UpdateSpeakerResponse")]
        void UpdateSpeaker(Services.SessionServiceReference.Speaker speaker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/UpdateSpeaker", ReplyAction="http://tempuri.org/ISessionService/UpdateSpeakerResponse")]
        System.Threading.Tasks.Task UpdateSpeakerAsync(Services.SessionServiceReference.Speaker speaker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/DeleteSpeaker", ReplyAction="http://tempuri.org/ISessionService/DeleteSpeakerResponse")]
        void DeleteSpeaker(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/DeleteSpeaker", ReplyAction="http://tempuri.org/ISessionService/DeleteSpeakerResponse")]
        System.Threading.Tasks.Task DeleteSpeakerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetSessionList", ReplyAction="http://tempuri.org/ISessionService/GetSessionListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.SessionDto> GetSessionList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetSessionList", ReplyAction="http://tempuri.org/ISessionService/GetSessionListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.SessionDto>> GetSessionListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetSessionById", ReplyAction="http://tempuri.org/ISessionService/GetSessionByIdResponse")]
        Services.SessionServiceReference.SessionDto GetSessionById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetSessionById", ReplyAction="http://tempuri.org/ISessionService/GetSessionByIdResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.SessionDto> GetSessionByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/SearchSessionByTitle", ReplyAction="http://tempuri.org/ISessionService/SearchSessionByTitleResponse")]
        Services.SessionServiceReference.SessionDto SearchSessionByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/SearchSessionByTitle", ReplyAction="http://tempuri.org/ISessionService/SearchSessionByTitleResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.SessionDto> SearchSessionByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AddSession", ReplyAction="http://tempuri.org/ISessionService/AddSessionResponse")]
        Services.SessionServiceReference.SessionDto AddSession(Services.SessionServiceReference.SessionDto session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AddSession", ReplyAction="http://tempuri.org/ISessionService/AddSessionResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.SessionDto> AddSessionAsync(Services.SessionServiceReference.SessionDto session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/UpdateSession", ReplyAction="http://tempuri.org/ISessionService/UpdateSessionResponse")]
        void UpdateSession(Services.SessionServiceReference.SessionDto session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/UpdateSession", ReplyAction="http://tempuri.org/ISessionService/UpdateSessionResponse")]
        System.Threading.Tasks.Task UpdateSessionAsync(Services.SessionServiceReference.SessionDto session);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/DeleteSession", ReplyAction="http://tempuri.org/ISessionService/DeleteSessionResponse")]
        void DeleteSession(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/DeleteSession", ReplyAction="http://tempuri.org/ISessionService/DeleteSessionResponse")]
        System.Threading.Tasks.Task DeleteSessionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetSessionTypes", ReplyAction="http://tempuri.org/ISessionService/GetSessionTypesResponse")]
        System.Collections.ObjectModel.ObservableCollection<string> GetSessionTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetSessionTypes", ReplyAction="http://tempuri.org/ISessionService/GetSessionTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> GetSessionTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetTrackList", ReplyAction="http://tempuri.org/ISessionService/GetTrackListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Track> GetTrackList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetTrackList", ReplyAction="http://tempuri.org/ISessionService/GetTrackListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Track>> GetTrackListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetTrackById", ReplyAction="http://tempuri.org/ISessionService/GetTrackByIdResponse")]
        Services.SessionServiceReference.Track GetTrackById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetTrackById", ReplyAction="http://tempuri.org/ISessionService/GetTrackByIdResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.Track> GetTrackByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/SearchTrackByName", ReplyAction="http://tempuri.org/ISessionService/SearchTrackByNameResponse")]
        Services.SessionServiceReference.Track SearchTrackByName(string track);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/SearchTrackByName", ReplyAction="http://tempuri.org/ISessionService/SearchTrackByNameResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.Track> SearchTrackByNameAsync(string track);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AddTrack", ReplyAction="http://tempuri.org/ISessionService/AddTrackResponse")]
        Services.SessionServiceReference.Track AddTrack(Services.SessionServiceReference.Track track);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AddTrack", ReplyAction="http://tempuri.org/ISessionService/AddTrackResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.Track> AddTrackAsync(Services.SessionServiceReference.Track track);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/UpdateTrack", ReplyAction="http://tempuri.org/ISessionService/UpdateTrackResponse")]
        void UpdateTrack(Services.SessionServiceReference.Track track);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/UpdateTrack", ReplyAction="http://tempuri.org/ISessionService/UpdateTrackResponse")]
        System.Threading.Tasks.Task UpdateTrackAsync(Services.SessionServiceReference.Track track);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/DeleteTrack", ReplyAction="http://tempuri.org/ISessionService/DeleteTrackResponse")]
        void DeleteTrack(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/DeleteTrack", ReplyAction="http://tempuri.org/ISessionService/DeleteTrackResponse")]
        System.Threading.Tasks.Task DeleteTrackAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/SearchTrackTypeByName", ReplyAction="http://tempuri.org/ISessionService/SearchTrackTypeByNameResponse")]
        Services.SessionServiceReference.Track SearchTrackTypeByName(string track);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/SearchTrackTypeByName", ReplyAction="http://tempuri.org/ISessionService/SearchTrackTypeByNameResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.Track> SearchTrackTypeByNameAsync(string track);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetRatingList", ReplyAction="http://tempuri.org/ISessionService/GetRatingListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Rating> GetRatingList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetRatingList", ReplyAction="http://tempuri.org/ISessionService/GetRatingListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Rating>> GetRatingListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetRatingById", ReplyAction="http://tempuri.org/ISessionService/GetRatingByIdResponse")]
        Services.SessionServiceReference.Rating GetRatingById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetRatingById", ReplyAction="http://tempuri.org/ISessionService/GetRatingByIdResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.Rating> GetRatingByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AddRating", ReplyAction="http://tempuri.org/ISessionService/AddRatingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Services.SessionServiceReference.FaultMessage), Action="http://tempuri.org/ISessionService/AddRatingFaultMessageFault", Name="FaultMessage", Namespace="http://schemas.datacontract.org/2004/07/ServiceLayer")]
        Services.SessionServiceReference.Rating AddRating(Services.SessionServiceReference.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AddRating", ReplyAction="http://tempuri.org/ISessionService/AddRatingResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.Rating> AddRatingAsync(Services.SessionServiceReference.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/UpdateRating", ReplyAction="http://tempuri.org/ISessionService/UpdateRatingResponse")]
        void UpdateRating(Services.SessionServiceReference.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/UpdateRating", ReplyAction="http://tempuri.org/ISessionService/UpdateRatingResponse")]
        System.Threading.Tasks.Task UpdateRatingAsync(Services.SessionServiceReference.Rating rating);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/DeleteRating", ReplyAction="http://tempuri.org/ISessionService/DeleteRatingResponse")]
        void DeleteRating(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/DeleteRating", ReplyAction="http://tempuri.org/ISessionService/DeleteRatingResponse")]
        System.Threading.Tasks.Task DeleteRatingAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetScheduleList", ReplyAction="http://tempuri.org/ISessionService/GetScheduleListResponse")]
        System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Schedule> GetScheduleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetScheduleList", ReplyAction="http://tempuri.org/ISessionService/GetScheduleListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Schedule>> GetScheduleListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetScheduleById", ReplyAction="http://tempuri.org/ISessionService/GetScheduleByIdResponse")]
        Services.SessionServiceReference.Schedule GetScheduleById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetScheduleById", ReplyAction="http://tempuri.org/ISessionService/GetScheduleByIdResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.Schedule> GetScheduleByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AddSchedule", ReplyAction="http://tempuri.org/ISessionService/AddScheduleResponse")]
        Services.SessionServiceReference.Schedule AddSchedule(int id, Services.SessionServiceReference.Schedule schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AddSchedule", ReplyAction="http://tempuri.org/ISessionService/AddScheduleResponse")]
        System.Threading.Tasks.Task<Services.SessionServiceReference.Schedule> AddScheduleAsync(int id, Services.SessionServiceReference.Schedule schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/DeleteSchedule", ReplyAction="http://tempuri.org/ISessionService/DeleteScheduleResponse")]
        void DeleteSchedule(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/DeleteSchedule", ReplyAction="http://tempuri.org/ISessionService/DeleteScheduleResponse")]
        System.Threading.Tasks.Task DeleteScheduleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AllSlots", ReplyAction="http://tempuri.org/ISessionService/AllSlotsResponse")]
        System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot> AllSlots();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AllSlots", ReplyAction="http://tempuri.org/ISessionService/AllSlotsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot>> AllSlotsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AllBreaks", ReplyAction="http://tempuri.org/ISessionService/AllBreaksResponse")]
        System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot> AllBreaks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AllBreaks", ReplyAction="http://tempuri.org/ISessionService/AllBreaksResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot>> AllBreaksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AllAssignableSlots", ReplyAction="http://tempuri.org/ISessionService/AllAssignableSlotsResponse")]
        System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot> AllAssignableSlots();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/AllAssignableSlots", ReplyAction="http://tempuri.org/ISessionService/AllAssignableSlotsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot>> AllAssignableSlotsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetNotAssignedSlots", ReplyAction="http://tempuri.org/ISessionService/GetNotAssignedSlotsResponse")]
        System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot> GetNotAssignedSlots();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISessionService/GetNotAssignedSlots", ReplyAction="http://tempuri.org/ISessionService/GetNotAssignedSlotsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot>> GetNotAssignedSlotsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISessionService/UpdateSlot")]
        void UpdateSlot(Services.SessionServiceReference.Slot slot);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISessionService/UpdateSlot")]
        System.Threading.Tasks.Task UpdateSlotAsync(Services.SessionServiceReference.Slot slot);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISessionServiceChannel : Services.SessionServiceReference.ISessionService, System.ServiceModel.IClientChannel {
    }
    
    //[System.Diagnostics.DebuggerStepThroughAttribute()]
    //[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    //public partial class SessionServiceClient : System.ServiceModel.ClientBase<Services.SessionServiceReference.ISessionService>, Services.SessionServiceReference.ISessionService {
        
    //    public SessionServiceClient() {
    //    }
        
    //    public SessionServiceClient(string endpointConfigurationName) : 
    //            base(endpointConfigurationName) {
    //    }
        
    //    public SessionServiceClient(string endpointConfigurationName, string remoteAddress) : 
    //            base(endpointConfigurationName, remoteAddress) {
    //    }
        
    //    public SessionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
    //            base(endpointConfigurationName, remoteAddress) {
    //    }
        
    //    public SessionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
    //            base(binding, remoteAddress) {
    //    }
        
    //    public System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Speaker> GetSpeakerList() {
    //        return base.Channel.GetSpeakerList();
    //    }
        
    //    public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Speaker>> GetSpeakerListAsync() {
    //        return base.Channel.GetSpeakerListAsync();
    //    }
        
    //    public Services.SessionServiceReference.Speaker GetSpeakerById(int id) {
    //        return base.Channel.GetSpeakerById(id);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.Speaker> GetSpeakerByIdAsync(int id) {
    //        return base.Channel.GetSpeakerByIdAsync(id);
    //    }
        
    //    public Services.SessionServiceReference.Speaker SearchSpeakerByName(string name) {
    //        return base.Channel.SearchSpeakerByName(name);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.Speaker> SearchSpeakerByNameAsync(string name) {
    //        return base.Channel.SearchSpeakerByNameAsync(name);
    //    }
        
    //    public Services.SessionServiceReference.Speaker AddSpeaker(Services.SessionServiceReference.Speaker speaker) {
    //        return base.Channel.AddSpeaker(speaker);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.Speaker> AddSpeakerAsync(Services.SessionServiceReference.Speaker speaker) {
    //        return base.Channel.AddSpeakerAsync(speaker);
    //    }
        
    //    public void UpdateSpeaker(Services.SessionServiceReference.Speaker speaker) {
    //        base.Channel.UpdateSpeaker(speaker);
    //    }
        
    //    public System.Threading.Tasks.Task UpdateSpeakerAsync(Services.SessionServiceReference.Speaker speaker) {
    //        return base.Channel.UpdateSpeakerAsync(speaker);
    //    }
        
    //    public void DeleteSpeaker(int id) {
    //        base.Channel.DeleteSpeaker(id);
    //    }
        
    //    public System.Threading.Tasks.Task DeleteSpeakerAsync(int id) {
    //        return base.Channel.DeleteSpeakerAsync(id);
    //    }
        
    //    public System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.SessionDto> GetSessionList() {
    //        return base.Channel.GetSessionList();
    //    }
        
    //    public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.SessionDto>> GetSessionListAsync() {
    //        return base.Channel.GetSessionListAsync();
    //    }
        
    //    public Services.SessionServiceReference.SessionDto GetSessionById(int id) {
    //        return base.Channel.GetSessionById(id);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.SessionDto> GetSessionByIdAsync(int id) {
    //        return base.Channel.GetSessionByIdAsync(id);
    //    }
        
    //    public Services.SessionServiceReference.SessionDto SearchSessionByTitle(string title) {
    //        return base.Channel.SearchSessionByTitle(title);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.SessionDto> SearchSessionByTitleAsync(string title) {
    //        return base.Channel.SearchSessionByTitleAsync(title);
    //    }
        
    //    public Services.SessionServiceReference.SessionDto AddSession(Services.SessionServiceReference.SessionDto session) {
    //        return base.Channel.AddSession(session);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.SessionDto> AddSessionAsync(Services.SessionServiceReference.SessionDto session) {
    //        return base.Channel.AddSessionAsync(session);
    //    }
        
    //    public void UpdateSession(Services.SessionServiceReference.SessionDto session) {
    //        base.Channel.UpdateSession(session);
    //    }
        
    //    public System.Threading.Tasks.Task UpdateSessionAsync(Services.SessionServiceReference.SessionDto session) {
    //        return base.Channel.UpdateSessionAsync(session);
    //    }
        
    //    public void DeleteSession(int id) {
    //        base.Channel.DeleteSession(id);
    //    }
        
    //    public System.Threading.Tasks.Task DeleteSessionAsync(int id) {
    //        return base.Channel.DeleteSessionAsync(id);
    //    }
        
    //    public System.Collections.ObjectModel.ObservableCollection<string> GetSessionTypes() {
    //        return base.Channel.GetSessionTypes();
    //    }
        
    //    public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<string>> GetSessionTypesAsync() {
    //        return base.Channel.GetSessionTypesAsync();
    //    }
        
    //    public System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Track> GetTrackList() {
    //        return base.Channel.GetTrackList();
    //    }
        
    //    public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Track>> GetTrackListAsync() {
    //        return base.Channel.GetTrackListAsync();
    //    }
        
    //    public Services.SessionServiceReference.Track GetTrackById(int id) {
    //        return base.Channel.GetTrackById(id);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.Track> GetTrackByIdAsync(int id) {
    //        return base.Channel.GetTrackByIdAsync(id);
    //    }
        
    //    public Services.SessionServiceReference.Track SearchTrackByName(string track) {
    //        return base.Channel.SearchTrackByName(track);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.Track> SearchTrackByNameAsync(string track) {
    //        return base.Channel.SearchTrackByNameAsync(track);
    //    }
        
    //    public Services.SessionServiceReference.Track AddTrack(Services.SessionServiceReference.Track track) {
    //        return base.Channel.AddTrack(track);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.Track> AddTrackAsync(Services.SessionServiceReference.Track track) {
    //        return base.Channel.AddTrackAsync(track);
    //    }
        
    //    public void UpdateTrack(Services.SessionServiceReference.Track track) {
    //        base.Channel.UpdateTrack(track);
    //    }
        
    //    public System.Threading.Tasks.Task UpdateTrackAsync(Services.SessionServiceReference.Track track) {
    //        return base.Channel.UpdateTrackAsync(track);
    //    }
        
    //    public void DeleteTrack(int id) {
    //        base.Channel.DeleteTrack(id);
    //    }
        
    //    public System.Threading.Tasks.Task DeleteTrackAsync(int id) {
    //        return base.Channel.DeleteTrackAsync(id);
    //    }
        
    //    public Services.SessionServiceReference.Track SearchTrackTypeByName(string track) {
    //        return base.Channel.SearchTrackTypeByName(track);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.Track> SearchTrackTypeByNameAsync(string track) {
    //        return base.Channel.SearchTrackTypeByNameAsync(track);
    //    }
        
    //    public System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Rating> GetRatingList() {
    //        return base.Channel.GetRatingList();
    //    }
        
    //    public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Rating>> GetRatingListAsync() {
    //        return base.Channel.GetRatingListAsync();
    //    }
        
    //    public Services.SessionServiceReference.Rating GetRatingById(int id) {
    //        return base.Channel.GetRatingById(id);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.Rating> GetRatingByIdAsync(int id) {
    //        return base.Channel.GetRatingByIdAsync(id);
    //    }
        
    //    public Services.SessionServiceReference.Rating AddRating(Services.SessionServiceReference.Rating rating) {
    //        return base.Channel.AddRating(rating);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.Rating> AddRatingAsync(Services.SessionServiceReference.Rating rating) {
    //        return base.Channel.AddRatingAsync(rating);
    //    }
        
    //    public void UpdateRating(Services.SessionServiceReference.Rating rating) {
    //        base.Channel.UpdateRating(rating);
    //    }
        
    //    public System.Threading.Tasks.Task UpdateRatingAsync(Services.SessionServiceReference.Rating rating) {
    //        return base.Channel.UpdateRatingAsync(rating);
    //    }
        
    //    public void DeleteRating(int id) {
    //        base.Channel.DeleteRating(id);
    //    }
        
    //    public System.Threading.Tasks.Task DeleteRatingAsync(int id) {
    //        return base.Channel.DeleteRatingAsync(id);
    //    }
        
    //    public System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Schedule> GetScheduleList() {
    //        return base.Channel.GetScheduleList();
    //    }
        
    //    public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Schedule>> GetScheduleListAsync() {
    //        return base.Channel.GetScheduleListAsync();
    //    }
        
    //    public Services.SessionServiceReference.Schedule GetScheduleById(int id) {
    //        return base.Channel.GetScheduleById(id);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.Schedule> GetScheduleByIdAsync(int id) {
    //        return base.Channel.GetScheduleByIdAsync(id);
    //    }
        
    //    public Services.SessionServiceReference.Schedule AddSchedule(int id, Services.SessionServiceReference.Schedule schedule) {
    //        return base.Channel.AddSchedule(id, schedule);
    //    }
        
    //    public System.Threading.Tasks.Task<Services.SessionServiceReference.Schedule> AddScheduleAsync(int id, Services.SessionServiceReference.Schedule schedule) {
    //        return base.Channel.AddScheduleAsync(id, schedule);
    //    }
        
    //    public void DeleteSchedule(int id) {
    //        base.Channel.DeleteSchedule(id);
    //    }
        
    //    public System.Threading.Tasks.Task DeleteScheduleAsync(int id) {
    //        return base.Channel.DeleteScheduleAsync(id);
    //    }
        
    //    public System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot> AllSlots() {
    //        return base.Channel.AllSlots();
    //    }
        
    //    public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot>> AllSlotsAsync() {
    //        return base.Channel.AllSlotsAsync();
    //    }
        
    //    public System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot> AllBreaks() {
    //        return base.Channel.AllBreaks();
    //    }
        
    //    public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot>> AllBreaksAsync() {
    //        return base.Channel.AllBreaksAsync();
    //    }
        
    //    public System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot> AllAssignableSlots() {
    //        return base.Channel.AllAssignableSlots();
    //    }
        
    //    public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot>> AllAssignableSlotsAsync() {
    //        return base.Channel.AllAssignableSlotsAsync();
    //    }
        
    //    public System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot> GetNotAssignedSlots() {
    //        return base.Channel.GetNotAssignedSlots();
    //    }
        
    //    public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Services.SessionServiceReference.Slot>> GetNotAssignedSlotsAsync() {
    //        return base.Channel.GetNotAssignedSlotsAsync();
    //    }
        
    //    public void UpdateSlot(Services.SessionServiceReference.Slot slot) {
    //        base.Channel.UpdateSlot(slot);
    //    }
        
    //    public System.Threading.Tasks.Task UpdateSlotAsync(Services.SessionServiceReference.Slot slot) {
    //        return base.Channel.UpdateSlotAsync(slot);
    //    }
    //}
}
